
--  //First prob Solution 1 

ALGORITHM SUM_distinct_elem_Solu1

VAR set1:ARRAY_OF INTEGER [20];
    set2:ARRAY_OF INTEGER [20];
    i,j:INTEGER ;
    sum:INTEGER :=0 ;

    BEGIN

        Read(set1);
        Read(set2);

    FOR i FROM 0 TO set1.length -1 STEP 1 DO
    FOR j FROM 0 TO set2.length -1  STEP 1 DO

        IF (set1[i]=set2[j]) THEN
        BREAK;

        ELSE
        sum:= sum + set1[i] ;

        END_IF
    END_FOR
    END_FOR

    FOR i FROM 0 TO set2.length -1 STEP 1 DO 
    FOR j FROM 0 TO set1.length -1 STEP 1 DO 
    IF(set2[i]=set1[j]) THEN
    BREAK;
    ELSE 
    sum:= sum + set2[i];
    END_IF
    END_FOR
    END_FOR
    
    Write ("The SUm of the  distincts elements in the two sets are",sum);

    END

    -- // First Prb Solution 2

    ALGORITHM SUM_distinct_elem_Solu2
VAR
    htab : HASH_TABLE<INTEGER,INTEGER>;
    set1 : ARRAY_OF INTEGER[20];
    set2 : ARRAY_OF INTEGER[20];
    sum : INTEGER:=0;
    i, count: INTEGER ;

BEGIN

    Read(set1);
    Read(set2);

	/*The two  "FOR" loops we will insert the element of set1 and set2 into  hashtab (htab)
        -The elements of the arrays ==> the key
        -The value => the number of the repetition in the two arrays.*/

    FOR i FROM 0 TO set1.length -1 STEP 1  DO
        IF (htab.lookup(set1[i]) = TRUE) THEN
            count := htab.get(set1[i]);
            htab.insert(set1[i],count+1);
        ELSE
            htab.insert(set1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO set2.length -1 STEP 1  DO
        IF (htab.lookup(set2[i]) = TRUE) THEN
            count := htab.get(set2[i]);
            htab.insert(set2[i],count+1);
        ELSE
            htab.insert(set2[i],1);
        END_IF
    END_FOR

	
	/*Search for all the keys that have a value equal to 1 and add it to the sum */
	
	FOR i FROM 0 TO set1.length-1 DO
		IF(htab.get(set1[i] = 1)
			sum := sum + set1[i];
		END_IF
	END_FOR
    	FOR i FROM 0 TO set2.length-1 DO
		IF(htab.get(set2[i] = 1))
			sum := sum + set2[i];
		END_IF
	END_FOR
	
    Write("The sum of different elements from two sets:", sum);

END



-- //Second problem Solution 1

ALGORITHM Second_prob_sol1
VAR
    set1: ARRAY_OF INTEGER[20];
    set2: ARRAY_OF INTEGER[20];
    sum : INTEGER  :=0;
    i,j: INTEGER ;

BEGIN
    Read(set1);
    Read(set2);
    

    FOR i FROM 0 TO set1.length-1 STEP 1  DO
        FOR j FROM 0 TO set2.length-1 STEP 1 DO
            IF (set1[i]=set2[j]) THEN
                sum := sum + set1[i] * 2;
                BREAK;
            END_IF
        END_FOR
    END_FOR

    Write("The sum of all overlapping elements ::", sum);

END

-- //Second problem Solution 2

ALGORITHM second_solution_prob1
VAR
    htab : HASH_TABLE<INTEGER,INTEGER>;
    set1 : ARRAY_OF INTEGER[20];
    set2 : ARRAY_OF INTEGER[20];
    sum : INTEGER:=0;
    i, count: INTEGER ;

BEGIN

    Read(set1);
    Read(set2);
 



    FOR i FROM 0 TO set1.length -1 STEP 1  DO
        IF (htab.lookup(set1[i]) = TRUE) THEN
            count := htab.get(set1[i]);
            htab.insert(set1[i],count+1);
        ELSE
            htab.insert(set1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO set2.length -1 STEP 1  DO
        IF (htab.lookup(set2[i]) = TRUE) THEN
            count := htab.get(set2[i]);
            htab.insert(set2[i],count+1);
        ELSE
            htab.insert(set2[i],1);
        END_IF
    END_FOR

	
	/*  search for all the keys that have a value equal to 2. 
    sum the multiplication of the keys by 2 */
	
	FOR i FROM 0 TO set1.length-1 DO
		IF(htab.get(set1[i] = 2)
			sum := sum + arr1[i] * 2;
		END_IF
	END_FOR

    FOR i FROM 0 TO set2.length-1 DO
		IF(htab.get(set2[i] = 2))
			sum := sum + set2[i] * 2;
		END_IF
	END_FOR
	
    Write("The sum of all overlapping elements:", sum);


END























